USE SMITH_DATABASE;
/*
Rename tables
*/
GO  
EXEC SP_RENAME 'ETHIOPIA_CONSTRUCTED', 'ETHIOPIA';
EXEC SP_RENAME 'INDIA_CONSTRUCTED', 'INDIA'; 
EXEC SP_RENAME 'PERU_CONSTRUCTED', 'PERU';
EXEC SP_RENAME 'VIETNAM_CONSTRUCTED', 'VIETNAM';  
GO 





DROP TABLE  IF EXISTS [COUNTRY_TABLE];

/*
THE DATA IS CURRENTLY SPLIT ACROSS FOUR LOCATIONS. WE WILL COMBINE INTO A SINGLE TABLE THAT WE CAN SUMMARISE.
*/
SELECT * INTO [COUNTRY_TABLE]
		FROM (
		SELECT [CHILDID], [COUNTRY], [YC], [ROUND], 
		[INROUND], [DECEASED], CAST(DINT AS DATE ) AS [DINT], 
		[CLUSTID], [REGION],[CHILDLOC], [CHSEX], [CHLANG],
		[CHETHNIC], [CHLDREL], [AGEMON], [CHWEIGHT], [CHHEIGHT],
		[BMI], [CHHPROB], [DRWATERQ] AS [DRWATERQ_NEW], TOILETQ AS [TOILETQ_NEW], 
		COOKINGQ AS [COOKINGQ_NEW], CREDIT,FOODSEC, UNDERWEIGHT, STUNTING, 
		THINNESS, CHILLNESS, CHINJURY, CHDISABILITY, ELECQ AS [ELECQ_NEW]	
		FROM DBO.INDIA
		/*
		THE UNION STATEMENT WILL ROP DUPLICATES WHILE APPENDING ALL QUERES
		*/
		UNION

		SELECT [CHILDID], [COUNTRY], [YC], [ROUND], 
		[INROUND], [DECEASED], CAST(DINT AS DATE ) AS [DINT], 
		[CLUSTID], [REGION],[CHILDLOC], [CHSEX], [CHLANG],
		[CHETHNIC], [CHLDREL], [AGEMON], [CHWEIGHT], [CHHEIGHT],
		[BMI], [CHHPROB], [DRWATERQ_NEW], [TOILETQ_NEW], 
		[COOKINGQ_NEW], CREDIT,FOODSEC, UNDERWEIGHT, STUNTING, 
		THINNESS, CHILLNESS, CHINJURY, CHDISABILITY, [ELECQ_NEW]	
		FROM DBO.ETHIOPIA

		UNION 

		SELECT [CHILDID], [COUNTRY], [YC], [ROUND], 
		[INROUND], [DECEASED], CAST(DINT AS DATE ) AS [DINT], 
		[CLUSTID], [REGION],[CHILDLOC], [CHSEX], [CHLANG],
		[CHETHNIC], [CHLDREL], [AGEMON], [CHWEIGHT], [CHHEIGHT],
		[BMI], [CHHPROB], [DRWATERQ_NEW], [TOILETQ_NEW], 
		[COOKINGQ_NEW], CREDIT,FOODSEC, UNDERWEIGHT, STUNTING, 
		THINNESS, CHILLNESS, CHINJURY, CHDISABILITY, [ELECQ_NEW]	
		FROM DBO.VIETNAM

		UNION

		SELECT [CHILDID], [COUNTRY], [YC], [ROUND], 
		[INROUND], [DECEASED], CAST(DINT AS DATE ) AS [DINT], 
		[CLUSTID], [REGION],[CHILDLOC], [CHSEX], [CHLANG],
		[CHETHNIC], [CHLDREL], [AGEMON], [CHWEIGHT], [CHHEIGHT],
		[BMI], [CHHPROB], [DRWATERQ] AS [DRWATERQ_NEW], TOILETQ AS [TOILETQ_NEW], 
		COOKINGQ AS [COOKINGQ_NEW], CREDIT,FOODSEC, UNDERWEIGHT, STUNTING, 
		THINNESS, CHILLNESS, CHINJURY, CHDISABILITY, ELECQ AS [ELECQ_NEW]	
		FROM DBO.PERU) AS COUNTRY_TABLE
		WHERE [ROUND] = 5
		ORDER BY [CHILDID];

/*
WE CHOSE ROUND FIVE, LARGELY BECAUSE THAT IS THE MOST RECENT ROUND OF THE SURVEY FOR ALL THE CHILDREN
*/


/*
WE WILL REPLACE THE COUNTRY REGION CODE WITH THE ACTUAL REGION NAME. LARGELY BEC
*/
UPDATE  T1
	SET T1.REGION = T2.REGION_NAME
	FROM COUNTRY_TABLE T1
	INNER JOIN [REGIONDATA] T2
		ON T1.REGION = T2.REGION_CODE

SELECT TOP 5 * FROM COUNTRY_TABLE

/*
DRINKING WATER IS ONE OF THE IMPORTANT METRICS TO ASSESS THE QUALITY OF LIFE. 
LET'S SEE HOW THAT METRIC EXCELS IN ALL REGIONS
- THE DATA DICTIONARY WILL COME IN HANDY HERE
*/
CREATE VIEW WATER_ACCESS AS
WITH CTE1 AS (
SELECT  CHILDID,
		[COUNTRY],
		[REGION],
		CASE
			WHEN DRWATERQ_NEW = 1 THEN 'YES'
			WHEN DRWATERQ_NEW = 0 THEN 'NO'
		ELSE 'UNKNOWN'
		END AS [ACCESS_TO_WATER]

		FROM  [COUNTRY_TABLE]
		) SELECT COUNTRY, REGION, [ACCESS_TO_WATER], COUNT(CHILDID) AS [COUNT]
			FROM CTE1
			GROUP BY COUNTRY, REGION, [ACCESS_TO_WATER]

/*
 LEVEL OF ACCESS TO SANITATION IS ANOTHER IMPORTANT VARIABLE
*/
CREATE VIEW SANITATION_ACCESS AS
WITH CTE1 AS (
SELECT  [CHILDID],
		[COUNTRY],
		[REGION],
		CASE
			WHEN TOILETQ_NEW = 1 THEN 'YES'
			WHEN TOILETQ_NEW = 0 THEN 'NO'
		ELSE 'UNKNOWN'
		END AS [SANITATION_ACCESS]

		FROM [COUNTRY_TABLE]
		) SELECT COUNTRY, REGION, [SANITATION_ACCESS], COUNT(CHILDID) AS [COUNT]
			FROM CTE1
			GROUP BY COUNTRY, REGION, [SANITATION_ACCESS]


/*
ACCESS TO ADEQUATE FUEL FOR COOKING
*/
DROP VIEW IF EXISTS COOKING_FUEL_ACCESS;
CREATE VIEW COOKING_FUEL_ACCESS	AS
WITH CTE1 AS(
SELECT  [CHILDID],
		[COUNTRY],
		[REGION],
		CASE
			WHEN COOKINGQ_NEW = 1 THEN 'YES'
			WHEN COOKINGQ_NEW = 0 THEN 'NO'
		ELSE 'UNKNOWN'
		END AS [COOKING_FUEL_ACCESS]

		FROM [COUNTRY_TABLE]
		) SELECT COUNTRY, REGION, [COOKING_FUEL_ACCESS], COUNT(CHILDID) AS [COUNT]
		FROM CTE1
		GROUP BY COUNTRY, REGION, [COOKING_FUEL_ACCESS]

		--ORDER BY COUNTRY DESC
SELECT * FROM COOKING_FUEL_ACCESS;


/*HOUSE HOLD FOOD SITUATION */
DROP VIEW IF EXISTS FOOD_SIT;
CREATE VIEW FOOD_SIT AS
WITH CTE1 AS
(
SELECT  CHILDID,
		[COUNTRY],
		[REGION],
		CASE
			WHEN FOODSEC = 1 THEN 'ENOUGH_TO_EAT'
			WHEN FOODSEC = 2 THEN 'ENOUGH_BUT_NOT_WHAT_WE_LIKE'
			WHEN FOODSEC = 3 THEN 'SOMETIMES_ENOUGH'
			WHEN FOODSEC = 4 THEN 'NOT_ENOUGH'
		ELSE 'NO ANSWER'
		END AS [FOODSECURITY]

		FROM [COUNTRY_TABLE]
		)SELECT COUNTRY,REGION, [FOODSECURITY], COUNT(CHILDID) AS [COUNT]
FROM 
		CTE1
		GROUP BY COUNTRY,REGION, [FOODSECURITY]

		--ORDER BY COUNTRY DESC
SELECT * FROM FOOD_SIT;

--SELECT DISTINCT TOILETQ_NEW FROM COUNTRY_TABLE;

/*ACCESS TO CREDIT */
DROP VIEW IF EXISTS CREDIT_ACCESS
CREATE VIEW CREDIT_ACCESS
AS
WITH CTE1 AS
(
SELECT  CHILDID,
		[COUNTRY],
		[REGION],
		CASE
			WHEN CREDIT = 1 THEN 'YES'
			WHEN CREDIT = 0 THEN 'NO'
		ELSE 'UNKNOWN'
		END AS [CREDIT_ACCESS]

		FROM [COUNTRY_TABLE]
		) SELECT COUNTRY, REGION, [CREDIT_ACCESS], COUNT(CHILDID) AS [COUNT]
FROM CTE1
		GROUP BY COUNTRY, REGION, [CREDIT_ACCESS]

		--ORDER BY COUNTRY DESC
SELECT * FROM  CREDIT_ACCESS;

/*
CHILD UNDERWEIGHT
*/
DROP VIEW IF EXISTS UNDERWEIGHT_CHILDREN;
CREATE VIEW UNDERWEIGHT_CHILDREN
AS
WITH CTE1 AS
(
SELECT  CHILDID,
		[COUNTRY],
		[REGION],
		CASE
			WHEN UNDERWEIGHT  = 0 THEN 'NO'
			WHEN UNDERWEIGHT  = 1 THEN 'MODERATE'
			WHEN UNDERWEIGHT  = 2 THEN 'SEVERE'
			ELSE 'UNKNOWN'
		END AS [UNDERWEIGHT]

		FROM [COUNTRY_TABLE]
		) SELECT COUNTRY, REGION, [UNDERWEIGHT], COUNT(CHILDID) AS [COUNT]
		FROM CTE1
		GROUP BY COUNTRY, REGION, [UNDERWEIGHT]

SELECT * FROM UNDERWEIGHT_CHILDREN

/*SHORT HEIGHT FOR AGE*/
DROP VIEW IF EXISTS STUNTED_HEIGHT;
CREATE VIEW STUNTED_HEIGHT
AS
WITH CTE1 AS
(
SELECT  CHILDID,
		[COUNTRY],
		[REGION],
		CASE
			WHEN STUNTING  = 0 THEN 'NO'
			WHEN STUNTING  = 1 THEN 'MODERATE'
			WHEN STUNTING  = 2 THEN 'SEVERE'
			ELSE 'UNKNOWN'
		END AS [STUNTED_GROWTH]

		FROM COUNTRY_TABLE
		)SELECT COUNTRY, REGION, [STUNTED_GROWTH], COUNT(CHILDID) AS [COUNT]
		FROM CTE1
		GROUP BY COUNTRY, REGION, [STUNTED_GROWTH]

SELECT * FROM STUNTED_HEIGHT;

--SELECT * FROM [COUNTRY_TABLE];

/*THINNESS FOR AGE*/
DROP VIEW IF EXISTS AGE_THINNESS;
CREATE VIEW AGE_THINNESS
AS
WITH CTE1 AS(
SELECT  CHILDID,
		[COUNTRY],
		[REGION],
		CASE
			WHEN THINNESS  = 0 THEN 'NO'
			WHEN THINNESS  = 1 THEN 'MODERATE'
			WHEN THINNESS  = 2 THEN 'SEVERE'
			ELSE 'UNKNOWN'
		END AS [THINNESS]

		FROM COUNTRY_TABLE
		)SELECT COUNTRY, REGION, [THINNESS], COUNT(CHILDID) AS [COUNT]
		FROM CTE1
		GROUP BY COUNTRY,REGION, [THINNESS]

SELECT * FROM AGE_THINNESS;

/*
CHILD HAS LONG TERM HEALTH PROBLEM?
*/
DROP VIEW IF EXISTS LONGTERM_HEALTHPROBLEM;
CREATE VIEW LONGTERM_HEALTHPROBLEM
AS
WITH CTE1 AS(
SELECT  CHILDID,
		[COUNTRY],
		[REGION],
		CASE
			WHEN CHHPROB = 1 THEN 'YES'
			WHEN CHHPROB = 0 THEN 'NO'
		ELSE 'UNKNOWN'
		END AS [LONGTERM_HEALTHPROB]

		FROM [COUNTRY_TABLE]
		)SELECT COUNTRY, REGION, [LONGTERM_HEALTHPROB], COUNT(CHILDID) AS [COUNT]
		FROM CTE1
		GROUP BY COUNTRY, REGION, [LONGTERM_HEALTHPROB];

SELECT * FROM LONGTERM_HEALTHPROBLEM;

/*
CHILD HAS SERIOUS ILLNESS SINCE LAST ROUND?
*/
DROP VIEW IF EXISTS ILLSINCE_ROUNDB4
CREATE VIEW ILLSINCE_ROUNDB4
AS
WITH CTE1 AS(
SELECT  CHILDID,
		[COUNTRY],
		[REGION],
		CASE
			WHEN CHILLNESS = 1 THEN 'YES'
			WHEN CHILLNESS = 0 THEN 'NO'
		ELSE 'UNKNOWN'
		END AS [CHILD_ILLNESS]

		FROM [COUNTRY_TABLE]
		) SELECT COUNTRY, REGION, [CHILD_ILLNESS], COUNT(CHILDID) AS [COUNT]
			FROM CTE1
		GROUP BY COUNTRY, REGION, [CHILD_ILLNESS]

SELECT * FROM ILLSINCE_ROUNDB4;


/*
CHILD DISABILITY
*/
DROP VIEW IF EXISTS DISABLED_CHILDREN;
CREATE VIEW DISABLED_CHILDREN
AS
WITH CTE1 AS(
SELECT  CHILDID,
		[COUNTRY],
		[REGION],
		CASE
			WHEN CHDISABILITY = 1 THEN 'YES'
			WHEN CHDISABILITY = 0 THEN 'NO'
		ELSE 'UNKNOWN'
		END AS [CHILD_DISABILITY]

		FROM [COUNTRY_TABLE]
		) SELECT COUNTRY, REGION, [CHILD_DISABILITY], COUNT(CHILDID) AS [COUNT]
FROM CTE1
		GROUP BY COUNTRY, REGION, [CHILD_DISABILITY]

SELECT * FROM DISABLED_CHILDREN;

/*
ACCESS TO ELECTRICITY
*/
DROP VIEW IF EXISTS E_ACCESS;
CREATE VIEW E_ACCESS
AS
WITH CTE1 AS(
SELECT  CHILDID,
		[COUNTRY],
		[REGION],
		CASE
			WHEN ELECQ_NEW = 1 THEN 'YES'
			WHEN ELECQ_NEW = 0 THEN 'NO'
		ELSE 'UNKNOWN'
		END AS [ELECTRICITY_NEW]

		FROM [COUNTRY_TABLE]
		) SELECT COUNTRY, REGION, [ELECTRICITY_NEW], COUNT(CHILDID) AS [COUNT]
FROM CTE1
		GROUP BY COUNTRY, REGION, [ELECTRICITY_NEW]

SELECT * FROM E_ACCESS




--CREATE TABLE SHOWING BMI OF CHILDREN
DROP TABLE IF EXISTS BMI_TABLE;

SELECT * INTO BMI_TABLE FROM 
(SELECT CHILDID,
COUNTRY,
ROUND ,
CHHEIGHT,
CHWEIGHT,
CAST(BMI AS FLOAT) AS BMI
FROM 
SMITH_DATABASE..COUNTRY_TABLE
WHERE ROUND = 5 AND DECEASED != 1)
AS BMI_TABLE;

/*
DEFINE A WEIGHT RANGE. THIS WILL GIVE AN INDICATOR INTO HOW MUCH CHILDREN ARE EITHER OBESE, OVERWEIGHT OR HEALTHY
*/

ALTER TABLE BMI_TABLE 
	ADD BMI_RANGE AS 
		CASE 
			WHEN (BMI > 30) THEN 'OBESE'
			WHEN (BMI > 25) THEN 'OVERWEIGHT'
			WHEN (BMI > 18.5) THEN 'HEALTHY'
			ELSE 'UNDERWEIGHT'
		END;

SELECT * FROM BMI_TABLE
ORDER BY COUNTRY DESC, BMI DESC;

/*
GET NUMBER OF OBESE CHILDREN WEIGHT CLASS
*/

SELECT COUNTRY, BMI_RANGE, COUNT(*) AS [WEIGHT_CLASS_count]
		FROM BMI_TABLE 
		GROUP BY COUNTRY, BMI_RANGE
		ORDER BY COUNTRY, BMI_RANGE;
	
